{"version":3,"file":"static/webpack/static/development/pages/index.js.e52d408845c8c24621d5.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["/**\n * Index\n * @summary The home page of our website.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button';\n\nconst Home = props => {\n    return (\n        <Layout>\n            {/* <h1>Media Tracker</h1>\n            <p>Home page</p> */}\n            <p>{`Res: ${props.result}`}</p>\n            <br />\n            <LoadingButton />\n        </Layout>\n    );\n};\n\nconst LoadingButton = () => {\n    const [isLoading, setLoading] = useState(false);\n    const [isClicked, setClicked] = useState(false);\n    const [names, setNames] = useState([]);\n\n    useEffect(() => {\n        if (isLoading) {\n            checkIn().then(props => {\n                setNames(props.result);\n                setClicked(true);\n                setLoading(false);\n            });\n        }\n    }, [isLoading]);\n\n    const handleClick = () => setLoading(true);\n\n    return (\n        <div>\n            <Button\n                variant=\"primary\"\n                disabled={isLoading}\n                onClick={!isLoading ? handleClick : null}\n            >\n                {isLoading ? 'Loadingâ€¦' : 'Click to load'}\n            </Button>\n            {\n                isClicked ?\n                    <div>\n                        {names.map((name, index) => {\n                            return (\n                                <p key={index}>{name}<br /></p>\n                            );\n                        })}\n                    </div>\n                    :\n                    null\n            }\n        </div>\n    );\n}\n\n// ADD YOUR GET ROUTE, NAME IN PARAM FOR FUNCTION, AND YOUR RESPONSE IN RETURN OBJECT\nconst checkIn = async () => {\n    return axios.all([\n        axios.get('http://localhost:5000/check-fabian'),\n        axios.get('http://localhost:5000/check-miguel')\n    ]).then(axios.spread(function (fabian, miguel) {\n        //return { result: `${fabian.data.Success} ${miguel.data.Success}` }\n        return { result: [fabian.data.Success, miguel.data.Success] }\n    })).then().catch(error => {\n        console.error(error);\n        return { result: 'Failed to check in members' }\n    });\n}\n\nHome.getInitialProps = async () => {\n    try {\n        // call server at endpoint /search-title\n        const res = await axios.get('http://localhost:5000/ping');\n        // res.data is the JSON object returned which is { Success: ***data*** }\n        return { result: res.data.Success }\n    } catch (error) {\n        console.error(error);\n        return { result: 'Failed to fetch data from server' }\n    }\n};\n\nexport default Home;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAHA;AAKA;AAAA;AACA;AANA;AAAA;AAAA;AAOA;AAPA;AAQA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;A","sourceRoot":""}